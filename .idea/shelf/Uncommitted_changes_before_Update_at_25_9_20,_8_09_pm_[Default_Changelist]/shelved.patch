Index: src/comp1110/ass2/gui/Viewer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp1110.ass2.gui;\n\n\nimport javafx.application.Application;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.transform.Rotate;\nimport javafx.scene.transform.Translate;\nimport javafx.stage.Stage;\n\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\n/**\n * A very simple viewer for piece placements in the IQ-Fit game.\n * <p>\n * NOTE: This class is separate from your main game class.  This\n * class does not play a game, it just illustrates various piece\n * placements.\n */\npublic class Viewer extends Application {\n\n    /* board layout */\n    private static final int SQUARE_SIZE = 60;\n    private static final int VIEWER_WIDTH = 720;\n    private static final int VIEWER_HEIGHT = 480;\n    private static final String URI_BASE = \"assets/\";\n\n    private final Group root = new Group();\n    private final Group controls = new Group();\n    private TextField textField;\n\n    /**\n     * Draw a placement in the window, removing any previously drawn one\n     *\n     * @param placement A valid placement string\n     */\n    void makePlacement(String placement){\n        root.getChildren().clear();\n        Pane container = new Pane();\n        for (int i=0; i<placement.length()/4;++i){\n            String PiecePlacement = placement.substring(4*i,4*(i+1));\n            Character[] arr1 = {'b','o','p','r','s','y'};\n            Set<Character> setFour = new HashSet<>(Arrays.asList(arr1));\n            char color = PiecePlacement.charAt(0);\n            char rotate = PiecePlacement.charAt(3);\n            int x = Character.getNumericValue(PiecePlacement.charAt(1));\n            int y = Character.getNumericValue(PiecePlacement.charAt(2));\n            String type;\n            if (Character.isLowerCase(color)){ type = String.valueOf(color).toUpperCase()+\"1\";}\n            else{type = String.valueOf(color).toUpperCase()+\"2\";}\n            Image image = new Image(Viewer.class.getResource(URI_BASE + type + \".png\").toString());\n            ImageView imagePiece = new ImageView(image);\n            if (setFour.contains(Character.toLowerCase(color))){\n                imagePiece.setFitHeight(102);\n                imagePiece.setFitWidth(204);\n            }else{\n                imagePiece.setFitHeight(102);\n                imagePiece.setFitWidth(153);\n            }\n            imagePiece.setX(102+x*51);\n            imagePiece.setY(75+y*51);\n            Rotate rot = new Rotate();\n            Translate translate = new Translate();\n            if (rotate == 'E'){\n                rot.setAngle(90);\n                rot.setPivotX(imagePiece.getX()+imagePiece.getFitHeight());\n                rot.setPivotY(imagePiece.getY());\n                translate.setX(imagePiece.getFitHeight());\n                imagePiece.getTransforms().addAll(rot,translate);\n            }\n            else if (rotate == 'S'){\n                rot.setAngle(180);\n                rot.setPivotX(imagePiece.getX()+imagePiece.getFitWidth());\n                rot.setPivotY(imagePiece.getY()+imagePiece.getFitHeight());\n                translate.setX(imagePiece.getFitWidth());\n                translate.setY(imagePiece.getFitHeight());\n                imagePiece.getTransforms().addAll(rot,translate);\n            }\n            else if (rotate == 'W'){\n                rot.setAngle(270);\n                rot.setPivotX(imagePiece.getX());\n                rot.setPivotY(imagePiece.getY()+imagePiece.getFitWidth());\n                translate.setY(imagePiece.getFitWidth());\n                imagePiece.getTransforms().addAll(rot,translate);\n            }\n            container.getChildren().add(imagePiece);\n        }\n        Image Board =  new Image(Viewer.class.getResource(URI_BASE  + \"board.png\").toString());\n        ImageView imageBoard = new ImageView(Board);\n        imageBoard.setX(60);\n        imageBoard.setY(60);\n        imageBoard.setFitHeight(300);\n        imageBoard.setFitWidth(600);\n        root.getChildren().add(controls);\n        root.getChildren().add(imageBoard);\n        root.getChildren().add(container);\n        // FIXME Task 4: implement the simple placement viewer\n    }\n    /**\n     * Create a basic text field for input and a refresh button.\n     */\n    private void makeControls() {\n        Label label1 = new Label(\"Placement:\");\n        textField = new TextField();\n        textField.setPrefWidth(300);\n        Button button = new Button(\"Refresh\");\n        button.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent e) {\n                makePlacement(textField.getText());\n                textField.clear();\n            }\n        });\n        HBox hb = new HBox();\n        hb.getChildren().addAll(label1, textField, button);\n        hb.setSpacing(10);\n        hb.setLayoutX(130);\n        hb.setLayoutY(VIEWER_HEIGHT - 50);\n        controls.getChildren().add(hb);\n    }\n\n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        primaryStage.setTitle(\"FitGame Viewer\");\n        Scene scene = new Scene(root, VIEWER_WIDTH, VIEWER_HEIGHT);\n        root.getChildren().add(controls);\n        makeControls();\n        primaryStage.setScene(scene);\n        primaryStage.show();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/comp1110/ass2/gui/Viewer.java	(revision 575acc52543e100d4ad64032357e1e81c523c86f)
+++ src/comp1110/ass2/gui/Viewer.java	(date 1601008928000)
@@ -131,7 +131,7 @@
     }
 
     @Override
-    public void start(Stage primaryStage) throws Exception {
+    public void start(Stage primaryStage) {
         primaryStage.setTitle("FitGame Viewer");
         Scene scene = new Scene(root, VIEWER_WIDTH, VIEWER_HEIGHT);
         root.getChildren().add(controls);
